name: Android Build & Telegram Upload

on:
  workflow_dispatch:
    inputs:
      send_telegram:
        description: "Send APK to Telegram?"
        required: true
        default: "false"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Save version info
        run: echo "APP_VERSION=$(date +'%Y.%m.%d.%H%M')" >> $GITHUB_ENV

      - name: Upload artifact (for debugging/download)
        uses: actions/upload-artifact@v4
        with:
          name: DXcore-android
          path: build/app/outputs/flutter-apk/app-release.apk

  release-to-telegram:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event.inputs.send_telegram == 'true' }}
    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: DXcore-android
          path: release/

      - name: Send to Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          APP_VERSION: ${{ env.APP_VERSION }}
        run: |
          echo "Sending APK to Telegram..."
          curl -F chat_id="$TELEGRAM_CHAT_ID" \
               -F document=@release/app-release.apk \
               -F caption="ðŸš€ New DXcore Android Build
ðŸ“Œ Version: $APP_VERSION
ðŸ”— Source: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
               "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendDocument"
